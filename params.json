{
  "name": "Asakusa-wordcount-example",
  "tagline": "Wordcount example with Asakusa Framework",
  "body": "# Asakusa WordCount Example\r\n\r\n[Hadoop WordCount](https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html#Example:_WordCount_v1.0), [Spark WordCount](http://spark.apache.org/examples.html) と同様のWord CountをAsakusa Frameworkで実装したものです。\r\n\r\n## 処理概要\r\n![flow](imgs/flow.png)\r\n\r\n入力データを [DirectIO line](http://docs.asakusafw.com/0.7.5/release/ja/html/sandbox/directio-line.html) で読み込み、 [@Extract](http://docs.asakusafw.com/latest/release/ja/html/dsl/operators.html#extract-operator) で単語に分解し、 [@Summarize](http://docs.asakusafw.com/latest/release/ja/html/dsl/operators.html#summarize-operator) で集計しています。\r\n\r\n## 必要環境\r\n* Hadoop 2.7.*\r\n* Spark 1.5 以上\r\n\r\n## テスト\r\n\r\n演算子の単体テストと、ジョブフローのテストを実装しています。\r\nテストの詳細については、 [ユーザーガイド](http://docs.asakusafw.com/latest/release/ja/html/testing/start-guide.html) をご覧ください。\r\n\r\n## ビルド\r\n\r\n```bash\r\n> ./gradlew assemble\r\n```\r\n\r\n## 配置\r\n```bash\r\n> cp -rp build/spark-batchapps/spark.wordcount $ASAKUSA_HOME/batchapps/\r\n```\r\n\r\n## 実行用データ\r\n\r\n`target/testing/directio/inputtext` に、Project Gutenbergの [Alice in Wonderland](http://www.gutenberg.org/cache/epub/11/pg11.txt)を同梱しています。HDFSに配置して、実行してください。\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}